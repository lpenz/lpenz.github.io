Create a debian live USB
How to create a customized live USB with debian
2013-12-09



= Introduction =

In this article we explain how to install a Debian GNU/Linux OS in a USB drive
as if it was a hard disk: with partitions and a bootloader.

This setup is useful to debug and recover a system, or to have a "home away from
home" environment - as long as the flash in the USB stick works.



= Pre-requisites =

First of all, you will need a USB drive :)

We will use //debootstrap// from Debian to create the contents of the root
partition, a partitioner (//fdisk//) and 



= Creating the debian live USB =


== 1 Partitioning ==

Create two partitions in the USB drive: one with 256MB for the ///boot// that
will hold the kernel and //syslinux//; and another with all the space available,
that will hold the rest of the root filesystem.

There are many utilities that can do that: parted, fdisk, etc. An example
session of fdisk is below, assuming that the usb drive is at ///dev/sdc//:

```
# fdisk /dev/sdc

Press o to create a new DOS partition table. 
Press n to create a boot partition of size 32MB
Partition number : 1
First sector : 2048
Last sector : 65536
Press n to create another partition with all default parameters.
In other words, press 'enter' for all options.
Press a then 1 to toggle boot flag for boot partition. 
Press t then 1 followed by 6 to change first partition's ID to FAT16
Press w to write all changes to device

#
```



== 2 Installing syslinux partition ==

We can now create the filesystem and install syslinux's files in it. Assuming
that the USB drive is at ///dev/sdc// as in the previous example, we will do
that at ///dev/sdc1//:
```
# mkdosfs /dev/sdc1
```

And, to install syslinux:
```
# syslinux /dev/sdc1
```



== 3 Installing the root partition ==

First, create the filesystem:
```
# mkfs.ext4 /dev/sdc2
```

--------------------

Mount the root partition

Install debian in the root partition with
debootstrap --arch <arch> <distribution> /mnt/new http://ftp.debian.org/debian

Mount devs in the root partition
mount -t devtmpfs dev dev
mount -t devpts devpts dev/pts
mount -t proc proc proc
mount -t sysfs sysfs sys

chroot root /bin/sh
set root password
passwd

Install kernel
apt-get install --no-install-recommends linux-image-amd64 (or other)

Mount the syslinux partition
Copy the kernel and initrd files to it
# cp root/boot/* syslinux/

(http://quietsche-entchen.de/cgi-bin/wiki.cgi/ariane/BootableUsbStick)
Use blkid to find out the UUID of the partitions.
Create the file syslinux.cfg with the following:
default current

timeout 1
prompt 1

label current
	kernel vmlinuz-3.2.0-4-amd64
	append initrd=initrd.img-3.2.0-4-amd64 root=UUID=49072262-4209-4111-b4a6-53d07a16e9f4

label backup
	kernel vmlinuz
	append initrd=initrd.gz root=UUID=49072262-4209-4111-b4a6-53d07a16e9f4

Unmount both partitions
umount dev/pts
umount dev
umount proc
umount sys


Install mbr:
cat /usr/lib/SYSLINUX/mbr.bin > /dev/sdc



= References =

- http://allskyee.blogspot.com.br/2014/01/using-syslinux-to-boot-debootstraped.html
- http://quietsche-entchen.de/cgi-bin/wiki.cgi/ariane/BootableUsbStick

