#!/usr/bin/python

import sys
import yaml
import os


def yamlget(d):
    yfilename = os.path.join(d, 'info.yaml')
    if not os.path.isfile(yfilename):
        return {}
    return yaml.load(open(yfilename).read())


def t2trender(t2tfilename):
    from tempfile import TemporaryFile
    from os.path import isfile
    from subprocess import Popen

    if not isfile(t2tfilename):
        raise SystemExit("error: can't find %s" % t2tfilename)
    outfd = TemporaryFile()
    outfd.write('<%inherit file="base.html"/>\n')
    try:
        t2t = Popen(['txt2tags', '-t', 'html', '-H', '-i', t2tfilename, '-o', '-'], stdout = outfd)
        retcode = t2t.wait()
        if retcode < 0:
            print >>sys.stderr, "Child was terminated by signal", -retcode
        elif retcode != 0:
            print >>sys.stderr, "Child returned", retcode
    except OSError, e:
        print >>sys.stderr, "Execution failed:", e
    outfd.seek(0)
    return outfd.read()


def render(data, y):
    from mako.template import Template
    from mako.lookup import TemplateLookup

    lookup = TemplateLookup(['templates'])
    return Template(data, lookup=lookup).render(**y)


def main(argv=None):
    from sys import stdin

    if argv is None:
        import sys
        argv = sys.argv

    from optparse import OptionParser

    parser = OptionParser("usage: %prog <input> <output>")

    opts, args = parser.parse_args(argv[1:])
    if len(args) != 2:
        parser.error("wrong number of arguments") # Will exit

    infilename = args[0]
    outfilename = args[1]

    y = yamlget('.')
    y.update(yamlget(os.path.dirname(infilename)))
    htmlstr = t2trender(infilename)
    out = open(outfilename, 'w')
    out.write(render(htmlstr, y))


if __name__ == "__main__":
    main()

